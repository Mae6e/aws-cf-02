AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy an Auto Scaling Group'

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  ImageId:
    Type: String
    Description: 'AMI ID for the EC2 instance'
    Default: 'ami-053a45fff0a704a47'

  InstanceType:
    Type: String
    Default: 't2.micro'

  VpcId:
    Type: String
    Description: 'VPC ID for the EC2 instance'
    Default: 'vpc-0977d6e274954f035'

  SubnetIda:
    Type: String
    Description: 'Subnet ID for the EC2 instance'
    Default: 'subnet-01b5de9df3e60a25e'

  SubnetIdf:
    Type: String
    Description: 'Subnet ID for the EC2 instance'
    Default: 'subnet-060dacfb61bbf93d0'

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow HTTP and SSH access'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: dev-scurity

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: dev-alb
      Subnets:
        - !Ref SubnetIda
        - !Ref SubnetIdf
      SecurityGroups:
        - !GetAtt SecurityGroup.GroupId
      Type: application
      Scheme: internet-facing

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: dev-target-group
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      TargetType: instance

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: dev-template
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !GetAtt SecurityGroup.GroupId
        KeyName: !Ref KeyName
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
             dnf update -y
             dnf install -y nginx
             systemctl enable nginx
             systemctl start nginx
             echo "<h1>Hello from Auto Scaling EC2!</h1>" > /usr/share/nginx/html/index.html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: 2
      MaxSize: 5
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref SubnetIda
        - !Ref SubnetIdf
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      TargetGroupARNs:
        - !Ref TargetGroup
